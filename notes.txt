# AICAI - Architecture & Functionality Notes (V14 - Definitive)

**Author:** Gemini (Senior Open-Source Engineer)
**Purpose:** To define the final, definitive V14 architecture. This version faithfully implements the core principles of ASI-Arch, creating a plausible, detailed, and scientifically-grounded system for autonomous, infinite improvement. It introduces a `Cognition Archive` for external knowledge and a `Critic` agent for qualitative assessment.

---

## 1. Core Philosophy: Autonomous Research & Development

This architecture transcends simple problem-solving. It is a complete, autonomous R&D system. It doesn't just improve code; it performs research, synthesizes knowledge, and makes qualitative judgments to foster genuine innovation. This is achieved by faithfully implementing the multi-agent structure and knowledge-driven methodology of ASI-Arch.

---

## 2. Architectural Deep Dive - V14

### 2.1. The `Cognition Archive`

This is the system's library, its connection to the vast body of human knowledge. It is a curated database (e.g., a vector database) containing research papers, articles, and documentation on software engineering, algorithms, and design patterns. This is the fuel for the `Researcher` agent and the foundation for the `Critic` agent's judgments.

### 2.2. The Multi-Agent System for Scientific Discovery

1.  **The `Researcher` Agent:**
    -   **Role:** The system's chief scientist and innovator.
    -   **Input:** The user's high-level goal, the system's past experimental results, and, most importantly, relevant documents retrieved from the `Cognition Archive`.
    -   **Task:** To synthesize this information and generate a high-level **Research Direction**. This is not just a small tweak; it is a proposal for a new, potentially superior, strategic approach.
    -   **Example Research Direction:** "The `Cognition Archive` contains several papers on the benefits of functional programming for testability. The system's past results show a high rate of untestable code. *Hypothesis:* A new prompt architecture that explicitly instructs the Engineer to use functional decomposition and pure functions will lead to a significant improvement in testability and a reduction in bugs."
    -   **Output:** A structured research proposal, including the hypothesis and a draft of a "Challenger" prompt set.

2.  **The `Engineer` Agent:**
    -   **Role:** The system's workhorse, responsible for turning research into reality.
    -   **Input:** A task and a prompt set (either the current "Champion" or a "Challenger").
    -   **Core Function:** It runs the standard `Code -> Test -> Execute` cycle.
    -   **Self-Revision Mechanism:** If a test fails, the Engineer is re-invoked with the code and the error, and is explicitly tasked with debugging and patching its own code.

3.  **The `Critic` Agent (LLM-as-Judge):**
    -   **Role:** The system's arbiter of quality and elegance.
    -   **Input:** A functionally correct code artifact that has passed all tests.
    -   **Task:** To perform a qualitative assessment. It is prompted with the principles of good software design from the `Cognition Archive` (e.g., "SOLID principles," "Don't Repeat Yourself") and is asked to score the code on criteria like **elegance, simplicity, maintainability, and novelty**.
    -   **Output:** A qualitative score and a structured report detailing its reasoning.

### 2.3. The Complete Research & Development Loop

1.  **Research:** The `Researcher` agent consults the `Cognition Archive` and past results to propose a new `Challenger` prompt set.
2.  **Experimentation:** The `Engineer` agent runs the task with both the `Champion` and `Challenger` prompts.
3.  **Verification:** The `Engineer`'s self-revision mechanism ensures both outputs are functionally correct.
4.  **Qualitative Assessment:** The `Critic` agent evaluates both correct solutions for their architectural quality.
5.  **Promotion:** A new Champion is chosen based on a fitness function that weighs both **objective performance** (efficiency, test coverage) and **qualitative score** (elegance, novelty). This is the key to avoiding local optima and rewarding true innovation.

---

## 4. Visualization V11: The Definitive R&D Loop

I will now create the final, most detailed interactive visualization. It will clearly illustrate the `Cognition Archive`, the new `Researcher` and `Critic` agents, and the complete, plausible research loop that fosters genuine creativity.
